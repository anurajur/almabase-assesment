{"version":3,"sources":["components/Modal.js","components/DraggableItem.js","components/Sidebar.js","components/DropArea.js","components/EditableArea.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","_ref","isOpen","currentElement","onClose","onSaveChanges","onDeleteElement","handleChange","React","createElement","className","onClick","onSubmit","type","name","value","label","onChange","x","readOnly","y","fontSize","fontWeight","DraggableItem","onDragStart","draggable","Sidebar","onExport","e","DropArea","onDrop","onDragOver","children","EditableArea","items","onDragEnd","onElementClick","selectedItemId","setSelectedItemId","map","item","key","id","concat","style","left","top","position","border","App","setItems","useState","isModalOpen","setIsModalOpen","setCurrentElement","handleDragStart","currentItemIndex","findIndex","i","dataTransfer","setData","effectAllowed","rect","target","getBoundingClientRect","offsetX","clientX","offsetY","clientY","JSON","stringify","useEffect","savedItems","localStorage","getItem","parse","setItem","preventDefault","getData","currentItem","find","toString","offset","dropAreaRect","currentTarget","newItem","Math","random","dropEffect","document","querySelector","newX","newY","prevItems","handleElementClick","stopPropagation","handleDeleteElement","filter","prev","[object Object]","exportToJson","dataStr","encodeURIComponent","downloadAnchorNode","setAttribute","body","appendChild","click","remove","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b3bfec76.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Modal = ({\n  isOpen,\n  currentElement,\n  onClose,\n  onSaveChanges,\n  onDeleteElement,\n  handleChange,\n}) => {\n  if (!isOpen || !currentElement) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <span className=\"close\" onClick={onClose}>\n          &times;\n        </span>\n        <form onSubmit={onSaveChanges} className=\"modal-form\">\n          <h2>Edit Label</h2>\n          <div className=\"form-group\">\n            <label>Text</label>\n            <input\n              type=\"text\"\n              name=\"label\"\n              value={currentElement.label}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>X</label>\n            <input type=\"number\" name=\"x\" value={currentElement.x} readOnly />\n          </div>\n          <div className=\"form-group\">\n            <label>Y</label>\n            <input type=\"number\" name=\"y\" value={currentElement.y} readOnly />\n          </div>\n          <div className=\"form-group\">\n            <label>Font Size</label>\n            <input\n              type=\"number\"\n              name=\"fontSize\"\n              value={currentElement.fontSize}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Font Weight</label>\n            <input\n              type=\"number\"\n              name=\"fontWeight\"\n              value={currentElement.fontWeight}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"submit\">Save Changes</button>\n            <button\n              type=\"button\"\n              onClick={onDeleteElement}\n              className=\"delete-button\"\n            >\n              Delete\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nfunction DraggableItem({ label, onDragStart }) {\n  return (\n    <div className=\"draggable\" draggable onDragStart={onDragStart}>\n      {label}\n    </div>\n  );\n}\n\nexport default DraggableItem;\n","import React from 'react';\nimport DraggableItem from './DraggableItem';\n\nconst Sidebar = ({ onDragStart, onExport }) => {\n  return (\n    <aside className=\"sidebar\">\n      <DraggableItem label=\"Label\" onDragStart={(e) => onDragStart(e, \"Label\")} />\n      <DraggableItem label=\"Input\" onDragStart={(e) => onDragStart(e, \"Input\")} />\n      <DraggableItem label=\"Button\" onDragStart={(e) => onDragStart(e, \"Button\")} />\n      <button onClick={onExport}>Export Configuration</button>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nfunction DropArea({ onDrop, onDragOver, onClick, children }) {\n  return (\n    <div\n      className=\"drop-area\"\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default DropArea;\n","import React from 'react';\nimport DropArea from './DropArea';\n\nconst EditableArea = ({ items, onDrop, onDragOver, onDragStart, onDragEnd, onElementClick, selectedItemId, setSelectedItemId }) => {\n  return (\n    <DropArea onDrop={onDrop} onDragOver={onDragOver} onClick={() => setSelectedItemId(null)}>\n      {items.map((item) => (\n        <div\n          key={item.id}\n          draggable\n          onDragStart={(e) => onDragStart(e, item)}\n          onDragEnd={onDragEnd}\n          className={`dropped-item ${selectedItemId === item.id ? \"selected\" : \"\"}`}\n          style={{\n            left: `${item.x}px`,\n            top: `${item.y}px`,\n            fontSize: `${item.fontSize}px`,\n            fontWeight: item.fontWeight,\n            position: \"absolute\",\n            border: selectedItemId === item.id ? \"2px solid red\" : \"none\",\n          }}\n          onClick={(e) => onElementClick(item, e)}\n        >\n          {item.label}\n        </div>\n      ))}\n    </DropArea>\n  );\n};\n\nexport default EditableArea;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Modal from \"./components/Modal\";\nimport Sidebar from \"./components/Sidebar\";\nimport EditableArea from \"./components/EditableArea\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentElement, setCurrentElement] = useState(null);\n  const [selectedItemId, setSelectedItemId] = useState(null);\n\n  const handleDragStart = (e, item) => {\n    if (item.id) {\n      // Dragging to reposition an existing item\n      const currentItemIndex = items.findIndex((i) => i.id === item.id);\n      setCurrentElement(items[currentItemIndex]);\n      e.dataTransfer.setData(\"application/reactflow\", item.id); // Set the item's ID, or some identifier\n      e.dataTransfer.effectAllowed = \"move\";\n    } else {\n      const rect = e.target.getBoundingClientRect();\n      const offsetX = e.clientX - rect.left;\n      const offsetY = e.clientY - rect.top;\n      e.dataTransfer.setData(\"text/plain\", item);\n      e.dataTransfer.setData(\n        \"offset\",\n        JSON.stringify({ x: offsetX, y: offsetY })\n      );\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const id = e.dataTransfer.getData(\"application/reactflow\");\n\n    if (id) {\n      const currentItem = items.find((item) => item.id.toString() === id);\n      if (currentItem) {\n        setCurrentElement(currentItem);\n        // Additional logic to set the position, if necessary\n      }\n    } else {\n      const label = e.dataTransfer.getData(\"text\");\n      const offset = JSON.parse(e.dataTransfer.getData(\"offset\"));\n      const dropAreaRect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - dropAreaRect.left - offset.x;\n      const y = e.clientY - dropAreaRect.top - offset.y;\n      const newItem = {\n        id: Math.random(), // unique identifier for each element\n        label,\n        x,\n        y,\n        fontSize: \"16\", // Default font size\n        fontWeight: \"400\", // Default font weight\n      };\n      setItems([...items, newItem]);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (currentElement) {\n      setCurrentElement((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSaveChanges = (e) => {\n    e.preventDefault();\n\n    if (!currentElement) return; // Add this check\n\n    setItems(\n      items.map((item) =>\n        item.id === currentElement.id ? { ...item, ...currentElement } : item\n      )\n    );\n    setIsModalOpen(false);\n  };\n\n  const handleDragEnd = (e) => {\n    if (!currentElement) return; // Add this check\n\n    const dropAreaRect = document\n      .querySelector(\".drop-area\")\n      .getBoundingClientRect();\n    const newX = e.clientX - dropAreaRect.left;\n    const newY = e.clientY - dropAreaRect.top;\n\n    setItems((prevItems) =>\n      prevItems.map((item) => {\n        if (item.id === currentElement.id) {\n          return { ...item, x: newX, y: newY };\n        }\n        return item;\n      })\n    );\n\n    setCurrentElement(null); // Clear the current element\n  };\n\n  const handleElementClick = (item, e) => {\n    e.stopPropagation(); // Prevent the drop area click event from firing\n    setCurrentElement(item);\n    setSelectedItemId(item.id);\n    setIsModalOpen(true);\n  };\n\n  useEffect(() => {\n    const savedItems = localStorage.getItem(\"items\");\n    if (savedItems) {\n      setItems(JSON.parse(savedItems));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items));\n  }, [items]);\n\n  useEffect(() => {\n    if (currentElement) {\n      localStorage.setItem(\"currentElement\", JSON.stringify(currentElement));\n    }\n    if (selectedItemId) {\n      localStorage.setItem(\"selectedItemId\", JSON.stringify(selectedItemId));\n    }\n  }, [currentElement, selectedItemId]);\n\n  const handleDeleteElement = () => {\n    if (!currentElement) return;\n\n    setItems(items.filter((item) => item.id !== currentElement.id));\n    setCurrentElement(null);\n    setSelectedItemId(null);\n    setIsModalOpen(false);\n  };\n\n  const exportToJson = () => {\n    const dataStr =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(items));\n    const downloadAnchorNode = document.createElement(\"a\");\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"page_configuration.json\");\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n\n  return (\n    <div className=\"app\">\n      <EditableArea\n        items={items}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        onElementClick={handleElementClick}\n        selectedItemId={selectedItemId}\n        setSelectedItemId={setSelectedItemId} // Add this line\n      />\n      <Modal\n        isOpen={isModalOpen}\n        currentElement={currentElement}\n        onClose={() => setIsModalOpen(false)}\n        onSaveChanges={handleSaveChanges}\n        onDeleteElement={handleDeleteElement}\n        handleChange={handleChange}\n      />\n      <Sidebar onDragStart={handleDragStart} onExport={exportToJson} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}